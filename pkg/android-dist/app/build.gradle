apply from: '../pos-android/app/build.gradle'

android {
    defaultConfig {
        applicationId "io.gigasource.pos"
    }
    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
        debug {
            storeFile file("release.keystore")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "giga"

    productFlavors {
        dev {
            dimension "giga"
            buildConfigField("String", "mode", '"--mode=android-local-server"')
            buildConfigField("String", "androidWebshop", '"--androidWebshop=http://192.168.10.13:8888"')
        }
        pro {
            dimension "giga"
            buildConfigField("String", "mode", '"--mode=android"')
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['../pos-android/app/src/main/java']
            assets.srcDirs = ['../pos-android/app/src/main/assets', '../app/src/main/assets']
            res.srcDirs = ['../pos-android/app/src/main/res']
        }
    }
}

import org.gradle.internal.os.OperatingSystem;

android.applicationVariants.all { variant ->
    task("addPatchToApk${variant.name.capitalize()}", dependsOn: "tinkerPatch${variant.name.capitalize()}") {
        doLast {
            try {
                if (OperatingSystem.current().isMacOsX()) {
                    try {
                        exec {
                            commandLine 'apktool', '-version'
                            ignoreExitValue = true
                        }
                    } catch (Exception e) {
                        logger.warn("Coudn't find apktool.");
                        commandLine './download-apktool.sh'
                    }
                    exec {
                        commandLine 'rm', '-rf', '../originalBuild/app'
                    }
                    exec {
                        commandLine 'apktool', 'd', '-r', '-s', '-o', '../originalBuild/app', '../originalBuild/app.apk'
                    }
                    exec {
                        commandLine 'mkdir', '../originalBuild/app/assets/appAssets/patch'
                    }
                    exec {
                        commandLine 'cp', "./build/outputs/apk/${variant.dirName.split('/')[0]}/tinkerPatch/${variant.dirName}/patch_signed_7zip.apk", "../originalBuild/app/assets/appAssets/patch/"
                    }
                    exec {
                        commandLine 'rm', '-rf', '../originalBuild/app-release-unsigned.apk'
                    }
                    exec {
                        commandLine 'apktool', 'b', '../originalBuild/app', '-o', '../originalBuild/app-release-unsigned.apk'
                    }
                    exec {
                        commandLine 'jarsigner', '-verbose', '-sigalg', 'SHA1withRSA', '-digestalg', 'SHA1', '-keystore', 'release.keystore', '-storepass', '123456', '../originalBuild/app-release-unsigned.apk', 'key0'
                    }
                }
            } catch (Exception e) {
                throw new GradleScriptException("Something went wrong when adding patch to apk", e);
            }
        }
    }
}
